<!--
   Author Couchbase <info@couchbase.com>
   Copyright 2011 Couchbase, Inc.
   All rights reserved.
 -->

<project name="spymemcached" default="jar" xmlns:ivy="antlib:org.apache.ivy.ant">
	<!-- some variables used -->
	<property name="name" value="spymemcached"/>
	<property name="version" value="2.7"/>

	<property name="build.dir" value="${basedir}/build" />
	<property name="etc.dir" value="${basedir}/etc" />
	<property name="lib.dir" value="${basedir}/lib" />
	<property name="src.dir" value="${basedir}/src/main/java" />
	<property name="test.dir" value="${basedir}/src/test/java"/>

	<property name="dist.dir" value="${basedir}/target" />
	<property name="build.classes" location="${build.dir}/classes"/>
	<property name="test.class.name" value="com.couchbase.sqoop.manager.CouchbaseExportTest" />

	<property name="sqoop.test.couchbase.connectstring"
		value="http://localhost:8091/pools"/>

	<property name="artifact.name" value="${name}-${version}" />
	<property name="dest.jar" value="${artifact.name}.jar" />

	<!-- ivy properties used -->
	<property name="ivy.settings.dir" value="${basedir}/ivy" />

	<path id="test.classpath">
		<pathelement location="${build.classes}" />
		<fileset dir="${lib.dir}">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<!-- Ivy-based dependency resolution -->
	<property name="ivy.dir" location="${basedir}/ivy" />
	<property name="ivysettings.xml" location="${ivy.dir}/ivysettings.xml"/>
	<loadproperties srcfile="${ivy.dir}/libraries.properties"/>
	<property name="ivy.jar" location="${lib.dir}/ivy-${ivy.version}.jar"/>
	<property name="ivy_repo_url"
	  value="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.version}/ivy-${ivy.version}.jar" />
	<property name="mvn_repo_url"
	  value="http://repo2.maven.org/maven2/org/apache/maven/maven-ant-tasks/${mvn.version}/maven-ant-tasks-${mvn.version}.jar"/>
	<property name="mvn.jar" location="${build.dir}/maven-ant-tasks-${mvn.version}.jar" />
	<property name="build.ivy.dir" location="${build.dir}/ivy" />
	<property name="build.ivy.lib.dir" location="${build.ivy.dir}/lib" />
	<property name="build.ivy.report.dir" location="${build.ivy.dir}/report" />
	<property name="redist.ivy.lib.dir" location="${build.ivy.lib.dir}/${name}/redist"/>

	<!--this is the naming policy for artifacts we want pulled down-->
	<property name="ivy.artifact.retrieve.pattern"
	      value="${name}/[conf]/[artifact]-[revision](-[classifier]).[ext]"/>

	<!-- paths used for compilation and run  -->
	<path id="lib.path.id">
		<fileset dir="${lib.dir}" />
	</path>
	<path id="run.path.id">
		<path refid="lib.path.id" />
		<path location="${build.dir}" />
	</path>

	<ivy:settings file="${ivy.settings.dir}/ivysettings.xml" />

	<!-- ====================================== 
          Section: Initializing
         ====================================== -->
	<target name="init">
		<!-- Path containing third-party libraries deployed directly with spymemcached.
	         This does not include anything that Ivy can retrieve for us.
	      -->
		<path id="lib.path">
			<fileset dir="${lib.dir}">
				<include name="*.jar" />
			</fileset>
		</path>

		<!-- Classpath for unit tests (superset of compile.classpath) -->
		<path id="test.classpath">
			<pathelement location="${build.test.classes}" />
			<path refid="${name}.common.classpath" />
		</path>
	</target>

	<target name="ivy-probe-antlib" >
		<condition property="ivy.found">
			<typefound uri="antlib:org.apache.ivy.ant" name="cleancache"/>
		</condition>
	</target>

	<target name="ivy-download" unless="offline">
		<mkdir dir="${lib.dir}" />
		<get src="${ivy_repo_url}" dest="${ivy.jar}" usetimestamp="true"/>
	</target>

	<target name="ivy-init-antlib" depends="ivy-download,ivy-probe-antlib"
	      unless="ivy.found">
		<typedef uri="antlib:org.apache.ivy.ant" onerror="fail"
	      loaderRef="ivyLoader">
			<classpath>
				<pathelement location="${ivy.jar}"/>
			</classpath>
		</typedef>
		<fail >
			<condition >
				<not>
					<typefound uri="antlib:org.apache.ivy.ant" name="cleancache"/>
				</not>
			</condition>
	      You need Apache Ivy 2.0 or later from http://ant.apache.org/
	      It could not be loaded from ${ivy_repo_url}
	    </fail>
	</target>

	<target name="ivy-init" depends="ivy-init-antlib" unless="ivy.configured">
		<ivy:configure settingsid="${name}.ivy.settings" file="${ivysettings.xml}"/>
		<property name="ivy.configured" value="true" />
	</target>

	<!-- ======================================
          Section: Resolving and Retrieving            
         ====================================== -->
	<target name="ivy-resolve" depends="ivy-init">
		<ivy:resolve settingsRef="${name}.ivy.settings" conf="common" />
	</target>
	<target name="ivy-retrieve" depends="ivy-resolve">
		<ivy:retrieve settingsRef="${name}.ivy.settings"
	      pattern="${build.ivy.lib.dir}/${ivy.artifact.retrieve.pattern}" sync="true" />
		<ivy:cachepath pathid="${name}.common.classpath" conf="common" />
	</target>

	<!-- ====================================== 
          Section: Testing and Reporting
         ====================================== -->
	<target name="report" depends="ivy-retrieve" description="--> generates a report of dependencies">
		<ivy:report todir="${build.dir}"/>
	</target>

	<target name="test" depends="compile">
		<junit fork="yes" haltonfailure="yes">
			<batchtest fork="yes">
				<fileset dir="${src.dir}/test">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
			<jvmarg value="-ea" />
			<sysproperty key="spy.root.logger" value="DEBUG,console" />
			<sysproperty key="sqoop.test.couchbase.connectstring"
	  		value="${sqoop.test.couchbase.connectstring}"/>
			<formatter type="plain" usefile="false" />
			<classpath refid="test.classpath" />
		</junit>
	</target>

	<!-- ======================================= 
          Section: Compiling and Packaging
         ======================================= -->
	<target name="compile" depends="ivy-init, ivy-retrieve" description="--> compile and run the project">
		<mkdir dir="${build.classes}" />
		<javac srcdir="${src.dir}" destdir="${build.classes}" classpathref="${name}.common.classpath" />
	</target>

	<target name="jar" depends="compile" description="Creates a jar file for the plugin">
		<jar jarfile="${build.dir}/${dest.jar}" basedir="${build.classes}" />
	</target>

	<target name="package" depends="jar" description="Packages files for distribution">
		<mkdir dir="${dist.dir}" />
		<copy file="${etc.dir}/documentation.pdf" todir="${dist.dir}" />
		<copy file="${etc.dir}/couchsqoop-config.xml" todir="${dist.dir}" />
		<copy file="${etc.dir}/couchsqoop-manager" todir="${dist.dir}" />
		<copy file="${etc.dir}/install.sh" todir="${dist.dir}" />
		<copy file="${etc.dir}/commons-codec-1.4.jar" todir="${dist.dir}" />
		<copy file="${etc.dir}/jettison-1.1.jar" todir="${dist.dir}" />
		<copy file="${etc.dir}/netty-3.1.5.GA.jar" todir="${dist.dir}" />
		<copy file="${etc.dir}/memcached-2.7.jar" todir="${dist.dir}" />
		<copy file="${build.dir}/couchsqoop-plugin-1.0.jar" todir="${dist.dir}" />
		<zip destfile="${name}-${version}.zip" basedir="${dist.dir}" />
		<delete dir="${dist.dir}"/>
	</target>

	<!-- ====================================== 
          Section: IDE Integration
         ====================================== -->
	<target name="eclipse" description="Generate Eclipse project"
	      depends="init, ivy-retrieve">
		<taskdef name="eclipse" classname="prantl.ant.eclipse.EclipseTask"
	        classpath="${lib.dir}/ant-eclipse-1.0-jvm1.2.jar" />
		<eclipse failonerror="true" updatealways="true">
			<project name="${name}" />
			<classpath>
				<source path="${src.dir}" />
				<source path="${test.dir}" />
				<output path="${build.dir}/eclipse-build" />
				<library pathref="${name}.common.classpath" />
			</classpath>
		</eclipse>
	</target>

	<!-- ================================= 
          Section: Cleaning
         ================================= -->
	<target name="clean" description="--> clean the project">
		<delete includeemptydirs="true">
			<fileset dir="${basedir}">
				<exclude name="src/**" />
				<exclude name="ivy/**" />
				<exclude name="etc/**" />
				<exclude name="lib/**" />
				<exclude name="xdocs/**" />
				<exclude name="build.xml" />
				<exclude name="buildfile" />
				<exclude name="ivy.xml" />
				<exclude name="LICENSE.txt" />
			</fileset>
		</delete>
	</target>

	<target name="clean-cache" description="--> clean the ivy cache">
		<ivy:cleancache />
	</target>
</project>
